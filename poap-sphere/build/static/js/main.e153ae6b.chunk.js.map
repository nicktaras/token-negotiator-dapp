{"version":3,"sources":["elements.js","App.js","reportWebVitals.js","index.js"],"names":["App","start","frameId","requestAnimationFrame","animate","stop","cancelAnimationFrame","renderScene","TWEEN","update","controls","window","renderer","render","scene","camera","this","targets","simple","table","sphere","helix","grid","THREE","innerWidth","innerHeight","position","z","CSS3DRenderer","setSize","domElement","style","top","x","y","lookAt","mount","appendChild","simpleObjectsLayout","generateGeometricLayouts","initTrackbarControls","transform","addEventListener","onWindowResize","bind","addClickListeners","aspect","updateProjectionMatrix","i","length","object","CSS3DObject","htmlElement","Math","random","add","push","tableLayout","sphereVector","helixVector","l","addSphereObject","addHelixObject","addGridObject","index","phi","acos","theta","sqrt","PI","setFromSphericalCoords","copy","multiplyScalar","setFromCylindricalCoords","floor","addClickListener","target","elementId","document","getElementById","element","createElement","className","backgroundColor","number","textContent","symbol","details","innerHTML","elementClickHandler","duration","removeAll","targetObject","transformObjectPosition","transformObjectRotation","Tween","to","onUpdate","easing","Easing","Exponential","InOut","rotation","console","log","TrackballControls","rotateSpeed","minDistance","maxDistance","removeChild","width","height","ref","id","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.e153ae6b.chunk.js","sourcesContent":["export default [\n    \"H\", \"Hydrogen\", \"1.00794\", 1, 1,\n    \"He\", \"Helium\", \"4.002602\", 18, 1,\n    \"Li\", \"Lithium\", \"6.941\", 1, 2,\n    \"Be\", \"Beryllium\", \"9.012182\", 2, 2,\n    \"B\", \"Boron\", \"10.811\", 13, 2,\n    \"C\", \"Carbon\", \"12.0107\", 14, 2,\n    \"N\", \"Nitrogen\", \"14.0067\", 15, 2,\n    \"O\", \"Oxygen\", \"15.9994\", 16, 2,\n    \"F\", \"Fluorine\", \"18.9984032\", 17, 2,\n    \"Ne\", \"Neon\", \"20.1797\", 18, 2,\n    \"Na\", \"Sodium\", \"22.98976...\", 1, 3,\n    \"Mg\", \"Magnesium\", \"24.305\", 2, 3,\n    \"Al\", \"Aluminium\", \"26.9815386\", 13, 3,\n    \"Si\", \"Silicon\", \"28.0855\", 14, 3,\n    \"P\", \"Phosphorus\", \"30.973762\", 15, 3,\n    \"S\", \"Sulfur\", \"32.065\", 16, 3,\n    \"Cl\", \"Chlorine\", \"35.453\", 17, 3,\n    \"Ar\", \"Argon\", \"39.948\", 18, 3,\n    \"K\", \"Potassium\", \"39.948\", 1, 4,\n    \"Ca\", \"Calcium\", \"40.078\", 2, 4,\n    \"Sc\", \"Scandium\", \"44.955912\", 3, 4,\n    \"Ti\", \"Titanium\", \"47.867\", 4, 4,\n    \"V\", \"Vanadium\", \"50.9415\", 5, 4,\n    \"Cr\", \"Chromium\", \"51.9961\", 6, 4,\n    \"Mn\", \"Manganese\", \"54.938045\", 7, 4,\n    \"Fe\", \"Iron\", \"55.845\", 8, 4,\n    \"Co\", \"Cobalt\", \"58.933195\", 9, 4,\n    \"Ni\", \"Nickel\", \"58.6934\", 10, 4,\n    \"Cu\", \"Copper\", \"63.546\", 11, 4,\n    \"Zn\", \"Zinc\", \"65.38\", 12, 4,\n    \"Ga\", \"Gallium\", \"69.723\", 13, 4,\n    \"Ge\", \"Germanium\", \"72.63\", 14, 4,\n    \"As\", \"Arsenic\", \"74.9216\", 15, 4,\n    \"Se\", \"Selenium\", \"78.96\", 16, 4,\n    \"Br\", \"Bromine\", \"79.904\", 17, 4,\n    \"Kr\", \"Krypton\", \"83.798\", 18, 4,\n    \"Rb\", \"Rubidium\", \"85.4678\", 1, 5,\n    \"Sr\", \"Strontium\", \"87.62\", 2, 5,\n    \"Y\", \"Yttrium\", \"88.90585\", 3, 5,\n    \"Zr\", \"Zirconium\", \"91.224\", 4, 5,\n    \"Nb\", \"Niobium\", \"92.90628\", 5, 5,\n    \"Mo\", \"Molybdenum\", \"95.96\", 6, 5,\n    \"Tc\", \"Technetium\", \"(98)\", 7, 5,\n    \"Ru\", \"Ruthenium\", \"101.07\", 8, 5,\n    \"Rh\", \"Rhodium\", \"102.9055\", 9, 5,\n    \"Pd\", \"Palladium\", \"106.42\", 10, 5,\n    \"Ag\", \"Silver\", \"107.8682\", 11, 5,\n    \"Cd\", \"Cadmium\", \"112.411\", 12, 5,\n    \"In\", \"Indium\", \"114.818\", 13, 5,\n    \"Sn\", \"Tin\", \"118.71\", 14, 5,\n    \"Sb\", \"Antimony\", \"121.76\", 15, 5,\n    \"Te\", \"Tellurium\", \"127.6\", 16, 5,\n    \"I\", \"Iodine\", \"126.90447\", 17, 5,\n    \"Xe\", \"Xenon\", \"131.293\", 18, 5,\n    \"Cs\", \"Caesium\", \"132.9054\", 1, 6,\n    \"Ba\", \"Barium\", \"132.9054\", 2, 6,\n    \"La\", \"Lanthanum\", \"138.90547\", 4, 9,\n    \"Ce\", \"Cerium\", \"140.116\", 5, 9,\n    \"Pr\", \"Praseodymium\", \"140.90765\", 6, 9,\n    \"Nd\", \"Neodymium\", \"144.242\", 7, 9,\n    \"Pm\", \"Promethium\", \"(145)\", 8, 9,\n    \"Sm\", \"Samarium\", \"150.36\", 9, 9,\n    \"Eu\", \"Europium\", \"151.964\", 10, 9,\n    \"Gd\", \"Gadolinium\", \"157.25\", 11, 9,\n    \"Tb\", \"Terbium\", \"158.92535\", 12, 9,\n    \"Dy\", \"Dysprosium\", \"162.5\", 13, 9,\n    \"Ho\", \"Holmium\", \"164.93032\", 14, 9,\n    \"Er\", \"Erbium\", \"167.259\", 15, 9,\n    \"Tm\", \"Thulium\", \"168.93421\", 16, 9,\n    \"Yb\", \"Ytterbium\", \"173.054\", 17, 9,\n    \"Lu\", \"Lutetium\", \"174.9668\", 18, 9,\n    \"Hf\", \"Hafnium\", \"178.49\", 4, 6,\n    \"Ta\", \"Tantalum\", \"180.94788\", 5, 6,\n    \"W\", \"Tungsten\", \"183.84\", 6, 6,\n    \"Re\", \"Rhenium\", \"186.207\", 7, 6,\n    \"Os\", \"Osmium\", \"190.23\", 8, 6,\n    \"Ir\", \"Iridium\", \"192.217\", 9, 6,\n    \"Pt\", \"Platinum\", \"195.084\", 10, 6,\n    \"Au\", \"Gold\", \"196.966569\", 11, 6,\n    \"Hg\", \"Mercury\", \"200.59\", 12, 6,\n    \"Tl\", \"Thallium\", \"204.3833\", 13, 6,\n    \"Pb\", \"Lead\", \"207.2\", 14, 6,\n    \"Bi\", \"Bismuth\", \"208.9804\", 15, 6,\n    \"Po\", \"Polonium\", \"(209)\", 16, 6,\n    \"At\", \"Astatine\", \"(210)\", 17, 6,\n    \"Rn\", \"Radon\", \"(222)\", 18, 6,\n    \"Fr\", \"Francium\", \"(223)\", 1, 7,\n    \"Ra\", \"Radium\", \"(226)\", 2, 7,\n    \"Ac\", \"Actinium\", \"(227)\", 4, 10,\n    \"Th\", \"Thorium\", \"232.03806\", 5, 10,\n    \"Pa\", \"Protactinium\", \"231.0588\", 6, 10,\n    \"U\", \"Uranium\", \"238.02891\", 7, 10,\n    \"Np\", \"Neptunium\", \"(237)\", 8, 10,\n    \"Pu\", \"Plutonium\", \"(244)\", 9, 10,\n    \"Am\", \"Americium\", \"(243)\", 10, 10,\n    \"Cm\", \"Curium\", \"(247)\", 11, 10,\n    \"Bk\", \"Berkelium\", \"(247)\", 12, 10,\n    \"Cf\", \"Californium\", \"(251)\", 13, 10,\n    \"Es\", \"Einstenium\", \"(252)\", 14, 10,\n    \"Fm\", \"Fermium\", \"(257)\", 15, 10,\n    \"Md\", \"Mendelevium\", \"(258)\", 16, 10,\n    \"No\", \"Nobelium\", \"(259)\", 17, 10,\n    \"Lr\", \"Lawrencium\", \"(262)\", 18, 10,\n    \"Rf\", \"Rutherfordium\", \"(267)\", 4, 7,\n    \"Db\", \"Dubnium\", \"(268)\", 5, 7,\n    \"Sg\", \"Seaborgium\", \"(271)\", 6, 7,\n    \"Bh\", \"Bohrium\", \"(272)\", 7, 7,\n    \"Hs\", \"Hassium\", \"(270)\", 8, 7,\n    \"Mt\", \"Meitnerium\", \"(276)\", 9, 7,\n    \"Ds\", \"Darmstadium\", \"(281)\", 10, 7,\n    \"Rg\", \"Roentgenium\", \"(280)\", 11, 7,\n    \"Cn\", \"Copernicium\", \"(285)\", 12, 7,\n    \"Nh\", \"Nihonium\", \"(286)\", 13, 7,\n    \"Fl\", \"Flerovium\", \"(289)\", 14, 7,\n    \"Mc\", \"Moscovium\", \"(290)\", 15, 7,\n    \"Lv\", \"Livermorium\", \"(293)\", 16, 7,\n    \"Ts\", \"Tennessine\", \"(294)\", 17, 7,\n    \"Og\", \"Oganesson\", \"(294)\", 18, 7\n];","import React, { Component } from \"react\";\nimport * as THREE from \"three\";\nimport { CSS3DRenderer, CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer';\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\nimport { TWEEN } from 'three/examples/jsm/libs/tween.module.min';\nimport './App.css';\nimport table from './elements';\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.targets = {simple: [], table: [], sphere: [], helix: [], grid: []};\n        // create a scene, that will hold all our elements such as objects, cameras and lights.\n        this.scene = new THREE.Scene();\n        // create a camera, which defines where we're looking at.\n        this.camera = new THREE.PerspectiveCamera(40, window.innerWidth / window.innerHeight, 1, 10000);\n        this.camera.position.z = 3000;\n        // create a CSS3DRenderer\n        this.renderer = new CSS3DRenderer()\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.renderer.domElement.style.position = 'absolute';\n        this.renderer.domElement.style.top = 0;\n        // position and point the camera to the center of the scene\n        this.camera.position.x = 500;\n        this.camera.position.y = 475;\n        this.camera.position.z = 767;\n        this.camera.lookAt(this.scene.position);\n        // add the output of the renderer to the html element\n        this.mount.appendChild(this.renderer.domElement)\n        this.simpleObjectsLayout();\n        this.generateGeometricLayouts();\n        this.initTrackbarControls();\n        this.transform(this.targets.table, 2000);\n        window.addEventListener('resize', this.onWindowResize.bind(this), false);\n        this.start();\n        this.addClickListeners();\n    }\n\n    onWindowResize() {\n        this.camera.aspect = window.innerWidth / window.innerHeight;\n        this.camera.updateProjectionMatrix();\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\n        this.render();\n    }\n\n    simpleObjectsLayout() {\n        for (let i = 0; i < table.length; i += 5) {\n            let object = new CSS3DObject(this.htmlElement(table, i));\n            object.position.x = Math.random() * 4000 - 2000;\n            object.position.y = Math.random() * 4000 - 2000;\n            object.position.z = Math.random() * 4000 - 2000;\n            this.scene.add(object);\n            this.targets.simple.push(object);\n            this.tableLayout(table, i);\n        }\n    }\n\n    generateGeometricLayouts() {\n        let sphereVector = new THREE.Vector3();\n        let helixVector = new THREE.Vector3();\n        for (let i = 0, l = this.targets.simple.length; i < l; i++) {\n            this.addSphereObject(sphereVector, i, l);\n            this.addHelixObject(helixVector, i);\n            this.addGridObject(i);\n        }\n    }\n\n    addSphereObject(sphereVector, index, length) {\n        const phi = Math.acos(-1 + (2 * index) / length);\n        const theta = Math.sqrt(length * Math.PI) * phi;\n        let object = new THREE.Object3D();\n        object.position.setFromSphericalCoords(800, phi, theta);\n        sphereVector.copy(object.position).multiplyScalar(2);\n        object.lookAt(sphereVector);\n        this.targets.sphere.push(object);\n    }\n\n    addHelixObject(helixVector, index) {\n        const theta = index * 0.175 + Math.PI;\n        const y = -(index * 8) + 450;\n        let object = new THREE.Object3D();\n        object.position.setFromCylindricalCoords(900, theta, y);\n        helixVector.x = object.position.x * 2;\n        helixVector.y = object.position.y;\n        helixVector.z = object.position.z * 2;\n        object.lookAt(helixVector);\n        this.targets.helix.push(object);\n    }\n\n    addGridObject(index) {\n        let object = new THREE.Object3D();\n        object.position.x = ((index % 5) * 400) - 800;\n        object.position.y = (-(Math.floor(index / 5) % 5) * 400) + 800;\n        object.position.z = (Math.floor(index / 25)) * 1000 - 2000;\n        this.targets.grid.push(object);\n    }\n\n    addClickListeners() {\n        this.addClickListener(this.targets.table, 'table');\n        this.addClickListener(this.targets.sphere, 'sphere');\n        this.addClickListener(this.targets.helix, 'helix');\n        this.addClickListener(this.targets.grid, 'grid');\n    }\n\n    addClickListener(target, elementId) {\n        const button = document.getElementById(elementId);\n        button.addEventListener('click', () => {\n            this.transform(target, 2000);\n        }, false);\n    }\n\n    htmlElement(table, i) {\n        let element = document.createElement('div');\n        element.className = 'element';\n        element.style.backgroundColor = 'rgba(0,127,127,' + (Math.random() * 0.5 + 0.25) + ')';\n  \n        let number = document.createElement('div');\n        number.className = 'number';\n        number.textContent = (i / 5) + 1;\n        element.appendChild(number);\n  \n        let symbol = document.createElement('div');\n        symbol.className = 'symbol';\n        symbol.textContent = table[i];\n        element.appendChild(symbol);\n  \n        let details = document.createElement('div');\n        details.className = 'details';\n        details.innerHTML = table[i + 1] + '<br>' + table[i + 2];\n        element.appendChild(details);\n  \n        element.addEventListener('click', () => this.elementClickHandler(i), false);\n  \n        return element;\n    }\n\n    transform(target, duration) {\n\n        TWEEN.removeAll();\n\n        for (let i = 0; i < this.targets.simple.length; i++) {\n            let object = this.targets.simple[i];\n            let targetObject = target[i];\n            this.transformObjectPosition(object, targetObject, duration);\n            this.transformObjectRotation(object, targetObject, duration);\n        }\n  \n        new TWEEN.Tween(this)\n            .to({}, duration * 2)\n            .onUpdate(this.render)\n            .start();\n  \n    }\n\n    transformObjectPosition(object, targetObject, duration) {\n\n        new TWEEN.Tween(object.position)\n            .to({\n                x: targetObject.position.x,\n                y: targetObject.position.y,\n                z: targetObject.position.z\n            }, Math.random() * duration + duration)\n            .easing(TWEEN.Easing.Exponential.InOut)\n            .start();\n  \n    }\n  \n    transformObjectRotation(object, targetObject, duration) {\n  \n        new TWEEN.Tween(object.rotation)\n            .to({\n                x: targetObject.rotation.x,\n                y: targetObject.rotation.y,\n                z: targetObject.rotation.z\n            }, Math.random() * duration + duration)\n            .easing(TWEEN.Easing.Exponential.InOut)\n            .start();\n  \n    }\n\n    tableLayout(table, index) {\n\n        let object = new THREE.Object3D();\n  \n        object.position.x = (table[index + 3] * 140) - 1330;\n        object.position.y = -(table[index + 4] * 180) + 990;\n        this.targets.table.push(object);\n  \n    }\n\n    elementClickHandler(i){\n\n        console.log('change tween');\n\n        this.transform(this.targets.table, 1000);\n  \n        new TWEEN.Tween(this.targets.simple[i / 5].position)\n            .to({\n                x: 0,\n                y: 0,\n                z: 2500\n            }, Math.random() * 2000 + 2000)\n            .easing(TWEEN.Easing.Exponential.InOut)\n            .start();\n  \n        new TWEEN.Tween(this)\n            .to({}, 2000 * 2)\n            .onUpdate(this.render)\n            .start();\n    }\n\n    initTrackbarControls() {\n        this.controls = new TrackballControls(this.camera, this.renderer.domElement);\n        this.controls.rotateSpeed = 0.5;\n        this.controls.minDistance = 500;\n        this.controls.maxDistance = 6000;\n        this.controls.addEventListener('change', this.render);\n    }\n\n    componentWillUnmount() {\n        this.stop()\n        this.mount.removeChild(this.renderer.domElement)\n    }\n    start = () => {\n        if (!this.frameId) {\n            this.frameId = requestAnimationFrame(this.animate)\n        }\n    }\n    stop = () => {\n        cancelAnimationFrame(this.frameId)\n    }\n    animate = () => {\n        this.renderScene()\n        TWEEN.update();\n        this.controls.update();\n        this.frameId = window.requestAnimationFrame(this.animate)\n    }\n    renderScene = () => {\n        this.renderer.render(this.scene, this.camera)\n    }\n    render() {\n        return (\n            <div>\n                <div\n                    style={{ width: '800px', height: '800px' }}\n                    ref={(mount) => { this.mount = mount }}\n                />\n                <div id=\"menu\">\n                    <button id=\"table\">TABLE</button>\n                    <button id=\"sphere\">SPHERE</button>\n                    <button id=\"helix\">HELIX</button>\n                    <button id=\"grid\">GRID</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default App;\n\n// import React, { Component } from \"react\";\n// import * as THREE from \"three\";\n// import { CSS3DRenderer, CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer';\n// import { TrackballControls } from 'three/examples/jsm/controls/TrackballControls';\n// import { TWEEN } from 'three/examples/jsm/libs/tween.module.min';\n// import './App.css';\n// import table from './elements';\n\n// let camera, scene, renderer, controls, composer;\n// var hblur, vblur;\n// let targets = {simple: [], table: [], sphere: [], helix: [], grid: []};\n\n// class App extends React.Component {\n\n//   componentDidMount() {\n//     this.init();\n//     this.animate();\n//     // this.mount.appendChild(this.renderer.domElement);\n//     // this.start() // todo \n//   }\n\n//   init() {\n//       this.initTrackbarControls();\n//       this.transform(targets.table, 2000);\n//       window.addEventListener('resize', this.onWindowResize, false);\n//   }\n\n\n\n//   simpleObjectsLayout() {\n\n//       for (let i = 0; i < table.length; i += 5) {\n\n//           let object = new CSS3DObject(this.htmlElement(table, i));\n//           object.position.x = Math.random() * 4000 - 2000;\n//           object.position.y = Math.random() * 4000 - 2000;\n//           object.position.z = Math.random() * 4000 - 2000;\n\n//           scene.add(object);\n//           targets.simple.push(object);\n//           this.tableLayout(table, i);\n\n//       }\n\n//   }\n\n//   htmlElement(table, i) {\n//       let element = document.createElement('div');\n//       element.className = 'element';\n//       element.style.backgroundColor = 'rgba(0,127,127,' + (Math.random() * 0.5 + 0.25) + ')';\n\n//       let number = document.createElement('div');\n//       number.className = 'number';\n//       number.textContent = (i / 5) + 1;\n//       element.appendChild(number);\n\n//       let symbol = document.createElement('div');\n//       symbol.className = 'symbol';\n//       symbol.textContent = table[i];\n//       element.appendChild(symbol);\n\n//       let details = document.createElement('div');\n//       details.className = 'details';\n//       details.innerHTML = table[i + 1] + '<br>' + table[i + 2];\n//       element.appendChild(details);\n\n//       element.addEventListener('click', ()=> this.elementClickHandler(i), false);\n\n//       return element;\n//   }\n\n//   elementClickHandler(i){\n\n//       this.transform(targets.table,1000);\n\n//       new TWEEN.Tween(targets.simple[i / 5].position)\n//           .to({\n//               x: 0,\n//               y: 0,\n//               z: 2500\n//           }, Math.random() * 2000 + 2000)\n//           .easing(TWEEN.Easing.Exponential.InOut)\n//           .start();\n\n//       new TWEEN.Tween(this)\n//           .to({}, 2000 * 2)\n//           .onUpdate(this.render)\n//           .start();\n//   }\n\n//   tableLayout(table, index) {\n\n//       let object = new THREE.Object3D();\n\n//       object.position.x = (table[index + 3] * 140) - 1330;\n//       object.position.y = -(table[index + 4] * 180) + 990;\n//       targets.table.push(object);\n\n//   }\n\n//   addClickListener(target, elementId) {\n\n//       const button = document.getElementById(elementId);\n\n//       button.addEventListener('click', function () {\n//           this.transform(target, 2000);\n//       }, false);\n\n//   }\n\n//   initTrackbarControls() {\n//       controls = new TrackballControls(camera, renderer.domElement);\n//       controls.rotateSpeed = 0.5;\n//       controls.minDistance = 500;\n//       controls.maxDistance = 6000;\n//       controls.addEventListener('change', this.render);\n//   }\n\n//   generateGeometricLayouts() {\n\n//       let sphereVector = new THREE.Vector3();\n//       let helixVector = new THREE.Vector3();\n\n//       for (let i = 0, l = targets.simple.length; i < l; i++) {\n//           this.addSphereObject(sphereVector, i, l);\n//           this.addHelixObject(helixVector, i);\n//           this.addGridObject(i);\n//       }\n\n//   }\n\n//   addSphereObject(sphereVector, index, length) {\n\n//       const phi = Math.acos(-1 + (2 * index) / length);\n//       const theta = Math.sqrt(length * Math.PI) * phi;\n//       let object = new THREE.Object3D();\n\n//       object.position.setFromSphericalCoords(800, phi, theta);\n\n//       sphereVector.copy(object.position).multiplyScalar(2);\n\n//       object.lookAt(sphereVector);\n\n//       targets.sphere.push(object);\n//   }\n\n//   addHelixObject(helixVector, index) {\n\n//       const theta = index * 0.175 + Math.PI;\n//       const y = -(index * 8) + 450;\n//       let object = new THREE.Object3D();\n\n//       object.position.setFromCylindricalCoords(900, theta, y);\n\n//       helixVector.x = object.position.x * 2;\n//       helixVector.y = object.position.y;\n//       helixVector.z = object.position.z * 2;\n\n//       object.lookAt(helixVector);\n\n//       targets.helix.push(object);\n//   }\n\n//   addGridObject(index) {\n\n//       let object = new THREE.Object3D();\n//       object.position.x = ((index % 5) * 400) - 800;\n//       object.position.y = (-(Math.floor(index / 5) % 5) * 400) + 800;\n//       object.position.z = (Math.floor(index / 25)) * 1000 - 2000;\n//       targets.grid.push(object);\n\n//   }\n\n//   transform(target, duration) {\n\n//       TWEEN.removeAll();\n\n//       for (let i = 0; i < targets.simple.length; i++) {\n//           let object = targets.simple[i];\n//           let targetObject = target[i];\n//           this.transformObjectPosition(object, targetObject, duration);\n//           this.transformObjectRotation(object, targetObject, duration);\n//       }\n\n//       new TWEEN.Tween(this)\n//           .to({}, duration * 2)\n//           .onUpdate(this.render)\n//           .start();\n\n//   }\n\n//   transformObjectPosition(object, targetObject, duration) {\n\n//       new TWEEN.Tween(object.position)\n//           .to({\n//               x: targetObject.position.x,\n//               y: targetObject.position.y,\n//               z: targetObject.position.z\n//           }, Math.random() * duration + duration)\n//           .easing(TWEEN.Easing.Exponential.InOut)\n//           .start();\n\n//   }\n\n//   transformObjectRotation(object, targetObject, duration) {\n\n//       new TWEEN.Tween(object.rotation)\n//           .to({\n//               x: targetObject.rotation.x,\n//               y: targetObject.rotation.y,\n//               z: targetObject.rotation.z\n//           }, Math.random() * duration + duration)\n//           .easing(TWEEN.Easing.Exponential.InOut)\n//           .start();\n\n//   }\n\n//   onWindowResize() {\n\n//       camera.aspect = window.innerWidth / window.innerHeight;\n//       camera.updateProjectionMatrix();\n//       renderer.setSize(window.innerWidth, window.innerHeight);\n//       this.render();\n\n//   }\n\n//   render() {\n\n\n//         renderer.render(scene, camera);\n\n\n//   }\n\n//   animate() {\n\n//       this.requestAnimationFrame(this.animate);\n//       TWEEN.update();\n//       controls.update();\n//       composer.render();\n//   }\n\n// //   componentWillUnmount() {\n// //     this.stop()\n// //     this.mount.removeChild(this.renderer.domElement)\n// //   }\n\n// //   start = () => {\n// //     if (!this.frameId) {\n// //       this.frameId = requestAnimationFrame(this.animate)\n// //     }\n// //   }\n// //   stop = () => {\n// //     cancelAnimationFrame(this.frameId)\n// //   }\n\n//   animate = () => {\n//     this.renderScene()\n//     this.frameId = window.requestAnimationFrame(this.animate)\n//   }\n\n//   renderScene = () => {\n//         renderer.render(this.scene, this.camera)\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <div id=\"menu\">\n//           <button id=\"table\">TABLE</button>\n//           <button id=\"sphere\">SPHERE</button>\n//           <button id=\"helix\">HELIX</button>\n//           <button id=\"grid\">GRID</button>\n//         </div>\n//         <div id=\"container\"></div>\n//         {/* <div\n//           style={{ width: '800px', height: '800px' }}\n//           ref={(mount) => { this.mount = mount }}\n//         /> */}\n//       </div>\n//     )\n//   }\n// }\n\n// export default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}